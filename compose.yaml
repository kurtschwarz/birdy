x-node-env: &node-env
  NODE_ENV: development

x-database-env: &database-env
  DATABASE_URL: file:/birdy/data/birdy.db

x-database-volume: &database-volume
  ./data/birdy.db:/birdy/data/birdy.db

include:
  - path: ./services/third-party/minio/compose.yaml
  - path: ./services/third-party/mqtt/compose.yaml
  - path: ./services/third-party/redpanda/compose.yaml

services:
  collector:
    build:
      target: dev
      context: ./
      dockerfile: ./services/collector/Dockerfile
    environment:
      <<: [*node-env, *database-env]
    volumes:
      - *database-volume
      - ./packages/data/prisma/:/birdy/packages/data/prisma/
      - ./services/collector/src/:/birdy/services/collector/src/
    ports:
      - 127.0.0.1:3000:3000/tcp
    networks:
      birdy-net:
        aliases:
          - collector.birdy.home.arpa
    depends_on:
      mqtt:
        condition: service_started
      redpanda:
        condition: service_started
    restart: always

  recorder:
    build:
      target: dev
      context: ./
      dockerfile: ./services/recorder/Dockerfile
    environment:
      <<: [*node-env]
    volumes:
      - ./services/recorder/src/:/birdy/services/recorder/src/
      - type: tmpfs
        target: /birdy/services/recorder/data
    networks:
      birdy-net:
        aliases:
          - recorder.birdy.home.arpa
    depends_on:
      mqtt:
        condition: service_started
      collector:
        condition: service_started
    restart: always

  analyzer:
    build:
      target: dev
      context: ./
      dockerfile: ./services/analyzer/Dockerfile
    volumes:
      - ./services/analyzer/src/:/birdy/services/analyzer/src/
    ports:
      - 127.0.0.1:50051:50051/tcp
    networks:
      birdy-net:
        aliases:
          - analyzer.birdy.home.arpa
    restart: always

networks:
  birdy-net:
    driver: bridge
